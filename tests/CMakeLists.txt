include_directories(${JSON_STRUCT_INCLUDE_DIR})

include(CMakeRC.cmake)

cmrc_add_resource_library(
    external_json_resources
    ALIAS external_json::rc
    NAMESPACE external_json
    generated.json
    )

add_executable(json-tokenizer-fail-test json-tokenizer-fail-test.cpp)
add_executable(json-tokenizer-partial-test json-tokenizer-partial-test.cpp)
add_executable(json-tokenizer-test json-tokenizer-test.cpp)
add_executable(json-struct-test json-struct-test.cpp)
add_executable(json-struct-verify json-struct-verify.cpp)
add_executable(json-struct-serialize-tuple json-struct-serialize-tuple.cpp)
add_executable(json-function-test json-function-test.cpp)
add_executable(json-function-external-test json-function-external-test.cpp)
add_executable(json-function-error-test json-function-error-test.cpp)
add_executable(json-copy-test json-copy-test.cpp)
add_executable(json-struct-serialize-test json-struct-serialize-test.cpp)
target_link_libraries(json-struct-serialize-test PRIVATE external_json::rc)
add_executable(members-size-test members-size-test.cpp)
add_executable(compiler-test compiler-test.cpp)
add_executable(meta-for-tokens meta-for-tokens.cpp)
add_executable(json-struct-big-test json-struct-big-test.cpp)
add_executable(json-struct-aliases-test json-struct-aliases-test.cpp)
add_executable(json-enum-test json-enum-test.cpp)
add_executable(json-meta-test json-meta-test.cpp)
add_executable(json-scope-test json-scope.cpp)
add_executable(json-mias-mat-test json-mias-mat.cpp)
add_executable(json-struct-performance json-struct-performance.cpp
                include/json/0.6/jsoncpp.cpp)
add_executable(json-struct-diff json-struct-diff.cpp)
add_executable(json-struct-external json-struct-external.cpp)
add_executable(json-struct-fail json-struct-fail.cpp)
add_executable(json-reformat json-reformat.cpp)
add_executable(json-nullable-test json-nullable-test.cpp)
add_executable(json-string-with-nullterminator-test json-string-with-nullterminator-test.cpp)
add_executable(multi-compilation-units multi-compilation-units-1.cpp multi-compilation-units-2.cpp multi-compilation-units-main.cpp)
target_link_libraries(json-reformat PRIVATE external_json::rc)

target_include_directories(json-struct-performance PRIVATE include/json/0.6)
add_test(NAME json-tokenizer-fail-test COMMAND json-tokenizer-fail-test)
add_test(NAME json-tokenizer-partial-test COMMAND json-tokenizer-partial-test)
add_test(NAME json-tokenizer-test COMMAND json-tokenizer-test)
add_test(NAME json-struct-test COMMAND json-struct-test)
add_test(NAME json-struct-verify COMMAND json-struct-verify)
add_test(NAME json-struct-serialize-tuple COMMAND json-struct-serialize-tuple)
add_test(NAME json-function-test COMMAND json-function-test)
add_test(NAME json-function-external-test COMMAND json-function-external-test)
add_test(NAME json-function-error-test COMMAND json-function-error-test)
add_test(NAME json-copy-test COMMAND json-copy-test)
add_test(NAME json-struct-serialize-test COMMAND json-struct-serialize-test)
add_test(NAME members-size-test COMMAND members-size-test)
add_test(NAME compiler-test COMMAND compiler-test)
add_test(NAME meta-for-tokens COMMAND meta-for-tokens)
add_test(NAME json-struct-big-test COMMAND json-struct-big-test)
add_test(NAME json-struct-aliases-test COMMAND json-struct-aliases-test)
add_test(NAME json-enum-test COMMAND json-enum-test)
add_test(NAME json-meta-test COMMAND json-meta-test)
add_test(NAME json-scope-test COMMAND json-scope-test)
add_test(NAME json-mias-mat-test COMMAND json-mias-mat-test)
#add_test(NAME json-struct-performance COMMAND json-struct-performance)
add_test(NAME json-struct-diff COMMAND json-struct-diff)
add_test(NAME json-struct-external COMMAND json-struct-external)
add_test(NAME json-reformat COMMAND json-reformat)
add_test(NAME json-nullable-teste COMMAND json-nullable-test)
add_test(NAME json-string-with-nullterminator-test COMMAND json-string-with-nullterminator-test)
add_test(NAME multi-compilation-units COMMAND multi-compilation-units)

if ("${CMAKE_CXX_COMPILE_FEATURES}" MATCHES ".*cxx_std_17.*")
    add_executable(json-optional json-optional.cpp)
    target_compile_features(json-optional PUBLIC cxx_std_17)
    add_test(NAME json-optional COMMAND json-optional)
endif()

